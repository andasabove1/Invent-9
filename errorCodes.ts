export interface ErrorCode {
  code: string;
  category: string;
  httpStatus: number;
  description?: string;
}

export const APPLICATION_ERRORS: ErrorCode[] = [
  { code: 'BODY_NOT_A_STRING_FROM_FUNCTION', category: 'Function', httpStatus: 502 },
  { code: 'MIDDLEWARE_INVOCATION_FAILED', category: 'Function', httpStatus: 500 },
  { code: 'MIDDLEWARE_INVOCATION_TIMEOUT', category: 'Function', httpStatus: 504 },
  { code: 'EDGE_FUNCTION_INVOCATION_FAILED', category: 'Function', httpStatus: 500 },
  { code: 'EDGE_FUNCTION_INVOCATION_TIMEOUT', category: 'Function', httpStatus: 504 },
  { code: 'FUNCTION_INVOCATION_FAILED', category: 'Function', httpStatus: 500 },
  { code: 'FUNCTION_INVOCATION_TIMEOUT', category: 'Function', httpStatus: 504 },
  { code: 'FUNCTION_PAYLOAD_TOO_LARGE', category: 'Function', httpStatus: 413 },
  { code: 'FUNCTION_RESPONSE_PAYLOAD_TOO_LARGE', category: 'Function', httpStatus: 500 },
  { code: 'FUNCTION_THROTTLED', category: 'Function', httpStatus: 503 },
  { code: 'NO_RESPONSE_FROM_FUNCTION', category: 'Function', httpStatus: 502 },
  { code: 'MICROFRONTENDS_MIDDLEWARE_ERROR', category: 'Function', httpStatus: 500 },
  { code: 'DEPLOYMENT_BLOCKED', category: 'Deployment', httpStatus: 403 },
  { code: 'DEPLOYMENT_PAUSED', category: 'Deployment', httpStatus: 503 },
  { code: 'DEPLOYMENT_DISABLED', category: 'Deployment', httpStatus: 402 },
  { code: 'DEPLOYMENT_NOT_FOUND', category: 'Deployment', httpStatus: 404 },
  { code: 'NOT_FOUND', category: 'Deployment', httpStatus: 404 },
  { code: 'DEPLOYMENT_DELETED', category: 'Deployment', httpStatus: 410 },
  { code: 'DEPLOYMENT_NOT_READY_REDIRECTING', category: 'Deployment', httpStatus: 303 },
  { code: 'INFINITE_LOOP_DETECTED', category: 'Runtime', httpStatus: 508 },
  { code: 'DNS_HOSTNAME_EMPTY', category: 'DNS', httpStatus: 502 },
  { code: 'DNS_HOSTNAME_NOT_FOUND', category: 'DNS', httpStatus: 502 },
  { code: 'DNS_HOSTNAME_RESOLVE_FAILED', category: 'DNS', httpStatus: 502 },
  { code: 'DNS_HOSTNAME_RESOLVED_PRIVATE', category: 'DNS', httpStatus: 404 },
  { code: 'DNS_HOSTNAME_SERVER_ERROR', category: 'DNS', httpStatus: 502 },
  { code: 'TOO_MANY_FORKS', category: 'Routing', httpStatus: 502 },
  { code: 'TOO_MANY_FILESYSTEM_CHECKS', category: 'Routing', httpStatus: 502 },
  { code: 'ROUTER_CANNOT_MATCH', category: 'Routing', httpStatus: 502 },
  { code: 'ROUTER_EXTERNAL_TARGET_CONNECTION_ERROR', category: 'Routing', httpStatus: 502 },
  { code: 'ROUTER_EXTERNAL_TARGET_ERROR', category: 'Routing', httpStatus: 502 },
  { code: 'ROUTER_TOO_MANY_HAS_SELECTIONS', category: 'Routing', httpStatus: 502 },
  { code: 'ROUTER_EXTERNAL_TARGET_HANDSHAKE_ERROR', category: 'Routing', httpStatus: 502 },
  { code: 'INVALID_REQUEST_METHOD', category: 'Request', httpStatus: 405 },
  { code: 'MALFORMED_REQUEST_HEADER', category: 'Request', httpStatus: 400 },
  { code: 'REQUEST_HEADER_TOO_LARGE', category: 'Request', httpStatus: 431 },
  { code: 'RESOURCE_NOT_FOUND', category: 'Request', httpStatus: 404 },
  { code: 'RANGE_END_NOT_VALID', category: 'Request', httpStatus: 416 },
  { code: 'RANGE_GROUP_NOT_VALID', category: 'Request', httpStatus: 416 },
  { code: 'RANGE_MISSING_UNIT', category: 'Request', httpStatus: 416 },
  { code: 'RANGE_START_NOT_VALID', category: 'Request', httpStatus: 416 },
  { code: 'RANGE_UNIT_NOT_SUPPORTED', category: 'Request', httpStatus: 416 },
  { code: 'TOO_MANY_RANGES', category: 'Request', httpStatus: 416 },
  { code: 'URL_TOO_LONG', category: 'Request', httpStatus: 414 },
  { code: 'INVALID_IMAGE_OPTIMIZE_REQUEST', category: 'Image', httpStatus: 400 },
  { code: 'OPTIMIZED_EXTERNAL_IMAGE_REQUEST_FAILED', category: 'Image', httpStatus: 502 },
  { code: 'OPTIMIZED_EXTERNAL_IMAGE_REQUEST_INVALID', category: 'Image', httpStatus: 502 },
  { code: 'OPTIMIZED_EXTERNAL_IMAGE_REQUEST_UNAUTHORIZED', category: 'Image', httpStatus: 502 },
  { code: 'OPTIMIZED_EXTERNAL_IMAGE_TOO_MANY_REDIRECTS', category: 'Image', httpStatus: 502 },
  { code: 'FALLBACK_BODY_TOO_LARGE', category: 'Cache', httpStatus: 502 }
];

export const PLATFORM_ERRORS: ErrorCode[] = [
  { code: 'INTERNAL_EDGE_FUNCTION_INVOCATION_FAILED', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_EDGE_FUNCTION_INVOCATION_TIMEOUT', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_FUNCTION_INVOCATION_FAILED', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_FUNCTION_INVOCATION_TIMEOUT', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_FUNCTION_NOT_FOUND', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_FUNCTION_NOT_READY', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_DEPLOYMENT_FETCH_FAILED', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_UNARCHIVE_FAILED', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_UNEXPECTED_ERROR', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_ROUTER_CANNOT_PARSE_PATH', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_STATIC_REQUEST_FAILED', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_OPTIMIZED_IMAGE_REQUEST_FAILED', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_CACHE_ERROR', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_CACHE_KEY_TOO_LONG', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_CACHE_LOCK_FULL', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_CACHE_LOCK_TIMEOUT', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_MISSING_RESPONSE_FROM_CACHE', category: 'Internal', httpStatus: 500 },
  { code: 'FUNCTION_THROTTLED', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_FUNCTION_SERVICE_UNAVAILABLE', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_MICROFRONTENDS_INVALID_CONFIGURATION_ERROR', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_MICROFRONTENDS_BUILD_ERROR', category: 'Internal', httpStatus: 500 },
  { code: 'INTERNAL_MICROFRONTENDS_UNEXPECTED_ERROR', category: 'Internal', httpStatus: 500 }
];